/* Generated by re2c 3.0 on Thu Nov 28 17:19:34 2024 */
#line 1 "lexer.re"
#include "lexer.h"
namespace iedb {

    static token_type lexer_token(const char * start,const char *end,int& len){
         const char * YYCURSOR = start;
         const char * YYMARKER = YYCURSOR;
         const char * YYLIMIT = end;
         token_type type = token_type::error;
         
#line 13 "lexer.cpp"
{
	char yych;
	yych = *YYCURSOR;
	switch (yych) {
		case '\t':
		case '\n':
		case '\r':
		case ' ': goto yy2;
		case '!': goto yy4;
		case '&': goto yy5;
		case '\'': goto yy6;
		case '(': goto yy7;
		case ')': goto yy8;
		case '*': goto yy9;
		case '+': goto yy10;
		case ',': goto yy11;
		case '-': goto yy12;
		case '.': goto yy13;
		case '/': goto yy14;
		case '0': goto yy15;
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy17;
		case ';': goto yy19;
		case '<': goto yy20;
		case '=': goto yy21;
		case '>': goto yy22;
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'e':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'p':
		case 'q':
		case 'r':
		case 't':
		case 'v':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		case '[': goto yy26;
		case ']': goto yy27;
		case 'a': goto yy28;
		case 'b': goto yy29;
		case 'c': goto yy30;
		case 'd': goto yy31;
		case 'f': goto yy32;
		case 'g': goto yy33;
		case 'n': goto yy34;
		case 'o': goto yy35;
		case 's': goto yy36;
		case 'u': goto yy37;
		case 'w': goto yy38;
		case '{': goto yy39;
		case '|': goto yy40;
		case '}': goto yy41;
		default: goto yy1;
	}
yy1:
	++YYCURSOR;
#line 50 "lexer.re"
	{printf("something wrong in %s\n",start);type = token_type::error;len = 1;return type;}
#line 111 "lexer.cpp"
yy2:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\t':
		case '\n':
		case '\r':
		case ' ': goto yy2;
		default: goto yy3;
	}
yy3:
#line 44 "lexer.re"
	{type = token_type::space; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 124 "lexer.cpp"
yy4:
	++YYCURSOR;
#line 28 "lexer.re"
	{type = token_type::bang; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 129 "lexer.cpp"
yy5:
	++YYCURSOR;
#line 31 "lexer.re"
	{type = token_type::bit_and; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 134 "lexer.cpp"
yy6:
	yych = *++YYCURSOR;
	switch (yych) {
		case '\'': goto yy42;
		default: goto yy6;
	}
yy7:
	++YYCURSOR;
#line 16 "lexer.re"
	{type = token_type::parenthesis_left; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 145 "lexer.cpp"
yy8:
	++YYCURSOR;
#line 17 "lexer.re"
	{type = token_type::parenthesis_right; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 150 "lexer.cpp"
yy9:
	++YYCURSOR;
#line 24 "lexer.re"
	{type = token_type::star; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 155 "lexer.cpp"
yy10:
	++YYCURSOR;
#line 22 "lexer.re"
	{type = token_type::plus; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 160 "lexer.cpp"
yy11:
	++YYCURSOR;
#line 13 "lexer.re"
	{type = token_type::comma; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 165 "lexer.cpp"
yy12:
	++YYCURSOR;
#line 23 "lexer.re"
	{type = token_type::minus; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 170 "lexer.cpp"
yy13:
	++YYCURSOR;
#line 15 "lexer.re"
	{type = token_type::dot; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 175 "lexer.cpp"
yy14:
	++YYCURSOR;
#line 25 "lexer.re"
	{type = token_type::slash; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 180 "lexer.cpp"
yy15:
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
		case 'X':
		case 'x': goto yy45;
		default: goto yy18;
	}
yy16:
#line 46 "lexer.re"
	{type = token_type::number_int; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 191 "lexer.cpp"
yy17:
	yych = *(YYMARKER = ++YYCURSOR);
yy18:
	switch (yych) {
		case '.': goto yy43;
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy17;
		default: goto yy16;
	}
yy19:
	++YYCURSOR;
#line 14 "lexer.re"
	{type = token_type::semi; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 213 "lexer.cpp"
yy20:
	++YYCURSOR;
#line 27 "lexer.re"
	{type = token_type::less; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 218 "lexer.cpp"
yy21:
	++YYCURSOR;
#line 29 "lexer.re"
	{type = token_type::equal; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 223 "lexer.cpp"
yy22:
	++YYCURSOR;
#line 26 "lexer.re"
	{type = token_type::more; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 228 "lexer.cpp"
yy23:
	yych = *++YYCURSOR;
yy24:
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy25;
	}
yy25:
#line 48 "lexer.re"
	{type = token_type::name; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 301 "lexer.cpp"
yy26:
	++YYCURSOR;
#line 18 "lexer.re"
	{type = token_type::bracket_left; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 306 "lexer.cpp"
yy27:
	++YYCURSOR;
#line 19 "lexer.re"
	{type = token_type::bracket_right; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 311 "lexer.cpp"
yy28:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'n': goto yy46;
		default: goto yy24;
	}
yy29:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'y': goto yy47;
		default: goto yy24;
	}
yy30:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'r': goto yy49;
		default: goto yy24;
	}
yy31:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy50;
		default: goto yy24;
	}
yy32:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'r': goto yy51;
		default: goto yy24;
	}
yy33:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'r': goto yy52;
		default: goto yy24;
	}
yy34:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'o': goto yy53;
		default: goto yy24;
	}
yy35:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'r': goto yy54;
		default: goto yy24;
	}
yy36:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy56;
		default: goto yy24;
	}
yy37:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'p': goto yy57;
		default: goto yy24;
	}
yy38:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'h': goto yy58;
		default: goto yy24;
	}
yy39:
	++YYCURSOR;
#line 20 "lexer.re"
	{type = token_type::brace_left; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 382 "lexer.cpp"
yy40:
	++YYCURSOR;
#line 30 "lexer.re"
	{type = token_type::bit_or; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 387 "lexer.cpp"
yy41:
	++YYCURSOR;
#line 21 "lexer.re"
	{type = token_type::brace_right; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 392 "lexer.cpp"
yy42:
	++YYCURSOR;
#line 47 "lexer.re"
	{type = token_type::string; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 397 "lexer.cpp"
yy43:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy59;
		default: goto yy44;
	}
yy44:
	YYCURSOR = YYMARKER;
	goto yy16;
yy45:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f': goto yy61;
		default: goto yy44;
	}
yy46:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'd': goto yy63;
		default: goto yy24;
	}
yy47:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy48;
	}
yy48:
#line 43 "lexer.re"
	{type = token_type::by; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 520 "lexer.cpp"
yy49:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy65;
		default: goto yy24;
	}
yy50:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'l': goto yy66;
		default: goto yy24;
	}
yy51:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'o': goto yy67;
		default: goto yy24;
	}
yy52:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'o': goto yy68;
		default: goto yy24;
	}
yy53:
	yych = *++YYCURSOR;
	switch (yych) {
		case 't': goto yy69;
		default: goto yy24;
	}
yy54:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		case 'd': goto yy71;
		default: goto yy55;
	}
yy55:
#line 34 "lexer.re"
	{type = token_type::Or; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 622 "lexer.cpp"
yy56:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'l': goto yy72;
		default: goto yy24;
	}
yy57:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'd': goto yy73;
		default: goto yy24;
	}
yy58:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy74;
		default: goto yy24;
	}
yy59:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9': goto yy59;
		default: goto yy60;
	}
yy60:
#line 45 "lexer.re"
	{type = token_type::number_float; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 659 "lexer.cpp"
yy61:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f': goto yy61;
		default: goto yy62;
	}
yy62:
#line 49 "lexer.re"
	{type = token_type::hex; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 690 "lexer.cpp"
yy63:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy64;
	}
yy64:
#line 33 "lexer.re"
	{type = token_type::And; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 762 "lexer.cpp"
yy65:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'a': goto yy75;
		default: goto yy24;
	}
yy66:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy76;
		default: goto yy24;
	}
yy67:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'm': goto yy77;
		default: goto yy24;
	}
yy68:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'u': goto yy79;
		default: goto yy24;
	}
yy69:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy70;
	}
yy70:
#line 32 "lexer.re"
	{type = token_type::Not; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 858 "lexer.cpp"
yy71:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy80;
		default: goto yy24;
	}
yy72:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy81;
		default: goto yy24;
	}
yy73:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'a': goto yy82;
		default: goto yy24;
	}
yy74:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'r': goto yy83;
		default: goto yy24;
	}
yy75:
	yych = *++YYCURSOR;
	switch (yych) {
		case 't': goto yy84;
		default: goto yy24;
	}
yy76:
	yych = *++YYCURSOR;
	switch (yych) {
		case 't': goto yy85;
		default: goto yy24;
	}
yy77:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy78;
	}
yy78:
#line 39 "lexer.re"
	{type = token_type::from; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 966 "lexer.cpp"
yy79:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'p': goto yy86;
		default: goto yy24;
	}
yy80:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'r': goto yy88;
		default: goto yy24;
	}
yy81:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'c': goto yy90;
		default: goto yy24;
	}
yy82:
	yych = *++YYCURSOR;
	switch (yych) {
		case 't': goto yy91;
		default: goto yy24;
	}
yy83:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy92;
		default: goto yy24;
	}
yy84:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy94;
		default: goto yy24;
	}
yy85:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy96;
		default: goto yy24;
	}
yy86:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy87;
	}
yy87:
#line 42 "lexer.re"
	{type = token_type::group; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 1080 "lexer.cpp"
yy88:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy89;
	}
yy89:
#line 41 "lexer.re"
	{type = token_type::order; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 1152 "lexer.cpp"
yy90:
	yych = *++YYCURSOR;
	switch (yych) {
		case 't': goto yy98;
		default: goto yy24;
	}
yy91:
	yych = *++YYCURSOR;
	switch (yych) {
		case 'e': goto yy100;
		default: goto yy24;
	}
yy92:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy93;
	}
yy93:
#line 40 "lexer.re"
	{type = token_type::where; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 1236 "lexer.cpp"
yy94:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy95;
	}
yy95:
#line 36 "lexer.re"
	{type = token_type::create; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 1308 "lexer.cpp"
yy96:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy97;
	}
yy97:
#line 38 "lexer.re"
	{type = token_type::Delete; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 1380 "lexer.cpp"
yy98:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy99;
	}
yy99:
#line 35 "lexer.re"
	{type = token_type::select; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 1452 "lexer.cpp"
yy100:
	yych = *++YYCURSOR;
	switch (yych) {
		case '0':
		case '1':
		case '2':
		case '3':
		case '4':
		case '5':
		case '6':
		case '7':
		case '8':
		case '9':
		case 'A':
		case 'B':
		case 'C':
		case 'D':
		case 'E':
		case 'F':
		case 'G':
		case 'H':
		case 'I':
		case 'J':
		case 'K':
		case 'L':
		case 'M':
		case 'N':
		case 'O':
		case 'P':
		case 'Q':
		case 'R':
		case 'S':
		case 'T':
		case 'U':
		case 'V':
		case 'W':
		case 'X':
		case 'Y':
		case 'Z':
		case '_':
		case 'a':
		case 'b':
		case 'c':
		case 'd':
		case 'e':
		case 'f':
		case 'g':
		case 'h':
		case 'i':
		case 'j':
		case 'k':
		case 'l':
		case 'm':
		case 'n':
		case 'o':
		case 'p':
		case 'q':
		case 'r':
		case 's':
		case 't':
		case 'u':
		case 'v':
		case 'w':
		case 'x':
		case 'y':
		case 'z': goto yy23;
		default: goto yy101;
	}
yy101:
#line 37 "lexer.re"
	{type = token_type::update; len = static_cast<uint32>(YYCURSOR - start);return type;}
#line 1524 "lexer.cpp"
}
#line 52 "lexer.re"

    }

	std::unique_ptr<lexer_result> lexer_result::lexer(const char *sql) {
		std::vector<token> tokens;
		auto len = strlen(sql);
		auto start = sql;
		auto end = start + len;
		while (start < end) {
			int token_len;
			//将字符串结束符号\0同样算作缓冲区中
			auto type = lexer_token(start, end + 1,  token_len);
			if (type == token_type::error)
				return nullptr;
			tokens.emplace_back(type, static_cast<uint32>(start - sql), token_len);
			start += token_len;
		}
		return std::make_unique<lexer_result>(sql, tokens);
	}
	void lexer_result::print() {
		for (auto token : tokens) {
			auto str = sql.substr(token.offset,token.len);
			printf("type:%d offset:%d len:%d %s\n",token.type,token.offset,token.len,str.c_str());
		}
	}


};